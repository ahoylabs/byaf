{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://backyard.ai/schemas/byaf-scenario.schema.json",
  "title": "Backyard Archive Format - Scenario Manifest",
  "type": "object",
  "additionalProperties": false,
  "required": [
    "schemaVersion",
    "formattingInstructions",
    "minP",
    "minPEnabled",
    "temperature",
    "repeatPenalty",
    "repeatLastN",
    "topK",
    "topP",
    "exampleMessages",
    "canDeleteExampleMessages",
    "firstMessages",
    "narrative",
    "promptTemplate",
    "grammar",
    "messages"
  ],
  "properties": {
    "schemaVersion": {
      "type": "integer",
      "const": 1,
      "description": "Monotonically increasing archive-format version."
    },
    "$schema": {
      "type": "string",
      "title": "Schema",
      "description": "Pointer to the schema against which this document should be validated."
    },
    "title": {
      "type": "string",
      "description": "Optional. The title of the scenario."
    },
    "model": {
      "type": "string",
      "description": "Optional. The model most recently used in the chat."
    },
    "formattingInstructions": {
      "type": "string",
      "description": "Formatting instructions for the model. In previous versions, this was called `basePrompt`."
    },
    "minP": { "type": "number" },
    "minPEnabled": { "type": "boolean" },
    "temperature": { "type": "number" },
    "repeatPenalty": { "type": "number" },
    "repeatLastN": { "type": "number" },
    "topK": { "type": "number" },
    "topP": { "type": "number" },
    "backgroundImage": { "type": "string" },
    "exampleMessages": {
      "type": "array",
      "items": {
        "type": "object",
        "required": ["characterID", "text"],
        "additionalProperties": false,
        "properties": {
          "characterID": { "type": "string" },
          "text": { "type": "string" }
        }
      }
    },
    "canDeleteExampleMessages": {
      "type": "boolean",
      "description": "If true, the model may remove example messages from the scenario in order to save tokens."
    },
    "firstMessages": {
      "type": "array",
      "minItems": 0,
      "maxItems": 1,
      "items": {
        "type": "object",
        "description": "Optional. The first message in the scenario. Currently, only one message is supported.",
        "required": ["characterID", "text"],
        "additionalProperties": false,
        "properties": {
          "characterID": { "type": "string" },
          "text": { "type": "string" }
        }
      }
    },
    "narrative": {
      "type": "string",
      "description": "A narrative describing the scenario."
    },
    "promptTemplate": {
      "oneOf": [
        {
          "type": "string",
          "enum": [
            "general",
            "ChatML",
            "Llama3",
            "Gemma2",
            "CommandR",
            "MistralInstruct"
          ]
        },
        { "type": "null" }
      ]
    },
    "grammar": {
      "type": ["string", "null"],
      "description": "Optional grammar rules."
    },
    "messages": {
      "type": "array",
      "items": {
        "oneOf": [
          {
            "type": "object",
            "additionalProperties": false,
            "required": ["type", "outputs"],
            "properties": {
              "type": { "const": "ai" },
              "outputs": {
                "type": "array",
                "minItems": 1,
                "items": {
                  "type": "object",
                  "additionalProperties": false,
                  "required": [
                    "createdAt",
                    "updatedAt",
                    "text",
                    "activeTimestamp"
                  ],
                  "properties": {
                    "createdAt": { "type": "string", "format": "date-time" },
                    "updatedAt": { "type": "string", "format": "date-time" },
                    "text": { "type": "string" },
                    "activeTimestamp": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          {
            "type": "object",
            "additionalProperties": false,
            "required": ["type", "createdAt", "updatedAt", "text"],
            "properties": {
              "type": { "const": "human" },
              "createdAt": { "type": "string", "format": "date-time" },
              "updatedAt": { "type": "string", "format": "date-time" },
              "text": { "type": "string" }
            }
          }
        ]
      }
    }
  }
}
